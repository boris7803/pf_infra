name: Terraform Deploy

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      PF_TOKEN:
        required: true
      PAT_REUSABLE_WORKFLOW:
        required: false
    inputs:
      CLUSTER_NAME:
        required: true
        type: string

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: boris7803/pf_infra
          token: ${{ secrets.PF_TOKEN }}
          path: pf_infra

      - name: Configure AWS credentials for backend (S3)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: pf_infra

      - name: Terraform Import & Apply
        run: |
          echo "‚è≥ Checking & importing missing Terraform resources..."

          echo "üîê Checking KMS alias..."
          terraform state list | grep 'module.eks.module.kms.aws_kms_alias.this\["cluster"\]' || \
          terraform import module.eks.module.kms.aws_kms_alias.this["cluster"] \
            arn:aws:kms:${{ secrets.AWS_REGION }}:228749873271:alias/eks/${{ inputs.CLUSTER_NAME }}

          echo "üìä Checking CloudWatch Log Group..."
          terraform state list | grep 'module.eks.aws_cloudwatch_log_group.this\[0\]' || \
          terraform import module.eks.aws_cloudwatch_log_group.this[0] \
            /aws/eks/${{ inputs.CLUSTER_NAME }}/cluster

          echo "üõ°Ô∏è Checking IAM Role..."
          terraform state list | grep 'module.ebs_csi_irsa_role.aws_iam_role.this\[0\]' || \
          terraform import module.ebs_csi_irsa_role.aws_iam_role.this[0] \
            boris-crm_demo-ebs-csi

          echo "üìê Planning..."
          terraform plan

          echo "üöÄ Applying..."
          terraform apply -auto-approve
        working-directory: pf_infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      _KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
